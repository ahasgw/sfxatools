# DO NOT EDIT! GENERATED AUTOMATICALLY!
# Copyright (C) 2002-2025 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
#
# This file represents the compiled summary of the specification in
# gnulib-cache.m4. It lists the computed macro invocations that need
# to be invoked from configure.ac.
# In projects that use version control, this file can be treated like
# other built files.


# This macro should be invoked from ./configure.ac, in the section
# "Checks for programs", right after AC_PROG_CC, and certainly before
# any checks for libraries, header files, types and library functions.
AC_DEFUN([gl_EARLY],
[
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable

  # Pre-early section.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_PROG_AR_RANLIB])

  # Code from module absolute-header:
  # Code from module alloca-opt:
  # Code from module assert:
  # Code from module assert-h:
  # Code from module attribute:
  # Code from module basename-lgpl:
  # Code from module bool:
  # Code from module builtin-expect:
  # Code from module c-ctype:
  # Code from module c99:
  # Code from module calloc-gnu:
  # Code from module calloc-posix:
  # Code from module cloexec:
  # Code from module close:
  # Code from module dirname:
  # Code from module dirname-lgpl:
  # Code from module double-slash-root:
  # Code from module dummy:
  # Code from module dup2:
  # Code from module errno-h:
  # Code from module error:
  # Code from module error-h:
  # Code from module exitfail:
  # Code from module extensions:
  # This is actually already done in the pre-early phase.
  # AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  # Code from module extensions-aix:
  AC_REQUIRE([gl_USE_AIX_EXTENSIONS])
  # Code from module extern-inline:
  # Code from module fcntl:
  # Code from module fcntl-h:
  # Code from module fd-hook:
  # Code from module filename:
  # Code from module float-h:
  # Code from module free-posix:
  # Code from module fstat:
  # Code from module ftruncate:
  # Code from module gen-header:
  # Code from module getdelim:
  # Code from module getdtablesize:
  # Code from module getline:
  # Code from module getprogname:
  # Code from module getsubopt:
  # Code from module gettext:
  # Code from module gettext-h:
  # Code from module gettimeofday:
  # Code from module gnulib-i18n:
  # Code from module havelib:
  # Code from module ialloc:
  # Code from module idx:
  # Code from module include_next:
  # Code from module intprops:
  # Code from module inttypes-h-incomplete:
  # Code from module largefile:
  AC_REQUIRE([AC_SYS_LARGEFILE])
  # Code from module libc-config:
  # Code from module limits-h:
  # Code from module locale-h:
  # Code from module malloc-gnu:
  # Code from module malloc-posix:
  # Code from module malloca:
  # Code from module math-h:
  # Code from module mbszero:
  # Code from module memchr:
  # Code from module minmax:
  # Code from module mktime:
  # Code from module msvc-inval:
  # Code from module msvc-nothrow:
  # Code from module multiarch:
  # Code from module open:
  # Code from module pathmax:
  # Code from module progname:
  # Code from module rawmemchr:
  # Code from module realloc-posix:
  # Code from module reallocarray:
  # Code from module size_max:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module snprintf:
  # Code from module ssize_t:
  # Code from module stat:
  # Code from module stat-time:
  # Code from module std-gnu11:
  # Code from module stdckdint-h:
  # Code from module stddef-h:
  # Code from module stdint-h:
  # Code from module stdio-h:
  gl_STDIO_H_EARLY
  # Code from module stdlib-h:
  # Code from module strchrnul:
  # Code from module strerror:
  # Code from module strerror-override:
  # Code from module string-h:
  # Code from module strstr:
  # Code from module strstr-simple:
  # Code from module strtod:
  # Code from module strtoimax:
  # Code from module strtol:
  # Code from module strtoll:
  # Code from module strtoul:
  # Code from module strtoull:
  # Code from module strtoumax:
  # Code from module sys_stat-h:
  # Code from module sys_time-h:
  # Code from module sys_types-h:
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  # Code from module time-h:
  # Code from module time_r:
  # Code from module unistd-h:
  # Code from module vararrays:
  # Code from module vasnprintf:
  # Code from module vsnprintf:
  # Code from module vsnzprintf:
  # Code from module wchar-h:
  # Code from module xalloc:
  # Code from module xalloc-die:
  # Code from module xalloc-oversized:
  # Code from module xsize:
])

# This macro should be invoked from ./configure.ac, in the section
# "Check for header files, types and library functions".
AC_DEFUN([gl_INIT],
[
  AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
  gl_cond_libtool=false
  gl_libdeps=
  gl_ltlibdeps=
  gl_m4_base='libgnu/m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gl])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='libgnu'
  gl_source_base_prefix=
  gl_ASSERT
  gl_C_BOOL
  gl_FUNC_CALLOC_GNU
  if test $REPLACE_CALLOC_FOR_CALLOC_GNU = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-gnu])
  gl_FUNC_CALLOC_POSIX
  if test $REPLACE_CALLOC_FOR_CALLOC_POSIX = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-posix])
  gl_MODULE_INDICATOR([dirname])
  gl_DOUBLE_SLASH_ROOT
  AC_REQUIRE([gl_ERROR_H])
  gl_ERROR
  gl_CONDITIONAL([GL_COND_OBJ_ERROR], [test $COMPILE_ERROR_C = 1])
  AM_COND_IF([GL_COND_OBJ_ERROR], [
    gl_PREREQ_ERROR
  ])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=error:3:c-format])
     AM_][XGETTEXT_OPTION([--flag=error_at_line:5:c-format])])
  gl_ERROR_H
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FUNC_FTRUNCATE
  gl_CONDITIONAL([GL_COND_OBJ_FTRUNCATE],
                 [test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1])
  AM_COND_IF([GL_COND_OBJ_FTRUNCATE], [
    gl_PREREQ_FTRUNCATE
  ])
  gl_UNISTD_MODULE_INDICATOR([ftruncate])
  gl_FUNC_GETLINE
  gl_CONDITIONAL([GL_COND_OBJ_GETLINE], [test $REPLACE_GETLINE = 1])
  AM_COND_IF([GL_COND_OBJ_GETLINE], [
    gl_PREREQ_GETLINE
  ])
  gl_STDIO_MODULE_INDICATOR([getline])
  gl_FUNC_GETSUBOPT
  gl_CONDITIONAL([GL_COND_OBJ_GETSUBOPT],
                 [test $HAVE_GETSUBOPT = 0 || test $REPLACE_GETSUBOPT = 1])
  AM_COND_IF([GL_COND_OBJ_GETSUBOPT], [
    gl_PREREQ_GETSUBOPT
  ])
  gl_STDLIB_MODULE_INDICATOR([getsubopt])
  dnl you must add AM_GNU_GETTEXT([external]) or similar to configure.ac.
  AM_GNU_GETTEXT_VERSION([0.22])
  AC_SUBST([LIBINTL])
  AC_SUBST([LTLIBINTL])
  gl_FUNC_GETTIMEOFDAY
  gl_CONDITIONAL([GL_COND_OBJ_GETTIMEOFDAY],
                 [test $HAVE_GETTIMEOFDAY = 0 || test $REPLACE_GETTIMEOFDAY = 1])
  AM_COND_IF([GL_COND_OBJ_GETTIMEOFDAY], [
    gl_PREREQ_GETTIMEOFDAY
  ])
  gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
  GNULIB_I18N
  AC_DEFUN([gl_HAVE_MODULE_HAVELIB])
  gl_INTTYPES_INCOMPLETE
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_LARGEFILE])
  gl_LIMITS_H
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_LOCALE_H
  gl_LOCALE_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_MALLOC_GNU
  if test $REPLACE_MALLOC_FOR_MALLOC_GNU = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-gnu])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-posix])
  gl_FUNC_MEMCHR
  gl_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
  AM_COND_IF([GL_COND_OBJ_MEMCHR], [
    gl_PREREQ_MEMCHR
  ])
  gl_STRING_MODULE_INDICATOR([memchr])
  gl_MINMAX
  gl_FUNC_MKTIME
  if test $REPLACE_MKTIME = 1; then
    AC_LIBOBJ([mktime])
    gl_PREREQ_MKTIME
  fi
  gl_TIME_MODULE_INDICATOR([mktime])
  gl_MULTIARCH
  AC_CHECK_DECLS([program_invocation_name], [], [], [#include <errno.h>])
  AC_CHECK_DECLS([program_invocation_short_name], [], [], [#include <errno.h>])
  gl_FUNC_REALLOC_POSIX
  gl_FUNC_REALLOC_0_NONNULL
  gl_CONDITIONAL([GL_COND_OBJ_REALLOC_POSIX],
                 [test $REPLACE_REALLOC_FOR_REALLOC_POSIX != 0])
  gl_STDLIB_MODULE_INDICATOR([realloc-posix])
  gl_FUNC_REALLOCARRAY
  gl_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY],
                 [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
  AM_COND_IF([GL_COND_OBJ_REALLOCARRAY], [
    gl_PREREQ_REALLOCARRAY
  ])
  gl_MODULE_INDICATOR([reallocarray])
  gl_STDLIB_MODULE_INDICATOR([reallocarray])
  gl_FUNC_SNPRINTF
  gl_STDIO_MODULE_INDICATOR([snprintf])
  gl_MODULE_INDICATOR([snprintf])
  gt_TYPE_SSIZE_T
  AC_CHECK_HEADERS_ONCE([stdckdint.h])
  if test $ac_cv_header_stdckdint_h = yes; then
    GL_GENERATE_STDCKDINT_H=false
  else
    GL_GENERATE_STDCKDINT_H=true
  fi
  gl_CONDITIONAL_HEADER([stdckdint.h])
  AC_PROG_MKDIR_P
  gl_STDDEF_H
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_CONDITIONAL_HEADER([stddef.h])
  AC_PROG_MKDIR_P
  gl_STDINT_H
  gl_CONDITIONAL_HEADER([stdint.h])
  dnl Because of gl_REPLACE_LIMITS_H:
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_STDIO_H
  gl_STDIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fscanf])
  gl_MODULE_INDICATOR([fscanf])
  gl_STDIO_MODULE_INDICATOR([scanf])
  gl_MODULE_INDICATOR([scanf])
  gl_STDIO_MODULE_INDICATOR([fgetc])
  gl_STDIO_MODULE_INDICATOR([getc])
  gl_STDIO_MODULE_INDICATOR([getchar])
  gl_STDIO_MODULE_INDICATOR([fgets])
  gl_STDIO_MODULE_INDICATOR([fread])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fprintf])
  gl_STDIO_MODULE_INDICATOR([printf])
  gl_STDIO_MODULE_INDICATOR([vfprintf])
  gl_STDIO_MODULE_INDICATOR([vprintf])
  gl_STDIO_MODULE_INDICATOR([fputc])
  gl_STDIO_MODULE_INDICATOR([putc])
  gl_STDIO_MODULE_INDICATOR([putchar])
  gl_STDIO_MODULE_INDICATOR([fputs])
  gl_STDIO_MODULE_INDICATOR([puts])
  gl_STDIO_MODULE_INDICATOR([fwrite])
  gl_STDLIB_H
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_STRERROR
  gl_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
  gl_MODULE_INDICATOR([strerror])
  gl_STRING_MODULE_INDICATOR([strerror])
  gl_STRING_H
  gl_STRING_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_STRSTR
  if test $REPLACE_STRSTR = 1; then
    AC_LIBOBJ([strstr])
  fi
  gl_FUNC_STRSTR_SIMPLE
  if test $REPLACE_STRSTR = 1; then
    AC_LIBOBJ([strstr])
  fi
  gl_STRING_MODULE_INDICATOR([strstr])
  gl_FUNC_STRTOD
  gl_CONDITIONAL([GL_COND_OBJ_STRTOD],
                 [test $HAVE_STRTOD = 0 || test $REPLACE_STRTOD = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOD], [
    gl_PREREQ_STRTOD
  ])
  gl_STDLIB_MODULE_INDICATOR([strtod])
  gl_FUNC_STRTOIMAX
  gl_CONDITIONAL([GL_COND_OBJ_STRTOIMAX],
                 [test $HAVE_DECL_STRTOIMAX = 0 || test $REPLACE_STRTOIMAX = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOIMAX], [
    gl_PREREQ_STRTOIMAX
  ])
  gl_INTTYPES_MODULE_INDICATOR([strtoimax])
  gl_FUNC_STRTOL
  gl_CONDITIONAL([GL_COND_OBJ_STRTOL],
                 [test $HAVE_STRTOL = 0 || test $REPLACE_STRTOL = 1])
  gl_STDLIB_MODULE_INDICATOR([strtol])
  gl_FUNC_STRTOLL
  gl_CONDITIONAL([GL_COND_OBJ_STRTOLL],
                 [test $HAVE_STRTOLL = 0 || test $REPLACE_STRTOLL = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOLL], [
    gl_PREREQ_STRTOLL
  ])
  gl_STDLIB_MODULE_INDICATOR([strtoll])
  gl_FUNC_STRTOUL
  gl_CONDITIONAL([GL_COND_OBJ_STRTOUL],
                 [test $HAVE_STRTOUL = 0 || test $REPLACE_STRTOUL = 1])
  gl_STDLIB_MODULE_INDICATOR([strtoul])
  gl_FUNC_STRTOULL
  gl_CONDITIONAL([GL_COND_OBJ_STRTOULL],
                 [test $HAVE_STRTOULL = 0 || test $REPLACE_STRTOULL = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOULL], [
    gl_PREREQ_STRTOULL
  ])
  gl_STDLIB_MODULE_INDICATOR([strtoull])
  gl_FUNC_STRTOUMAX
  gl_CONDITIONAL([GL_COND_OBJ_STRTOUMAX],
                 [test $HAVE_DECL_STRTOUMAX = 0 || test $REPLACE_STRTOUMAX = 1])
  AM_COND_IF([GL_COND_OBJ_STRTOUMAX], [
    gl_PREREQ_STRTOUMAX
  ])
  gl_INTTYPES_MODULE_INDICATOR([strtoumax])
  gl_SYS_TIME_H
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TYPES_H
  gl_SYS_TYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_TIME_H
  gl_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UNISTD_H
  gl_UNISTD_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_C_VARARRAYS
  gl_FUNC_VSNPRINTF
  gl_STDIO_MODULE_INDICATOR([vsnprintf])
  gl_XALLOC
  gl_MODULE_INDICATOR([xalloc])
  gl_MODULE_INDICATOR([xalloc-die])
  gl_gnulib_enabled_4661e0b4e500a1a00180219f0280fb04=false
  gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f=false
  gl_gnulib_enabled_attribute=false
  gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547=false
  gl_gnulib_enabled_b43d3c0af3443b283ca8535297d65f1a=false
  gl_gnulib_enabled_cloexec=false
  gl_gnulib_enabled_close=false
  gl_gnulib_enabled_dup2=false
  gl_gnulib_enabled_d873cc295cb8f2b86655a43b19b8a7e0=false
  gl_gnulib_enabled_fcntl=false
  gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8=false
  gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239=false
  gl_gnulib_enabled_2c905a91a3e2d1527bacec459c4d462f=false
  gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955=false
  gl_gnulib_enabled_fstat=false
  gl_gnulib_enabled_getdelim=false
  gl_gnulib_enabled_getdtablesize=false
  gl_gnulib_enabled_getprogname=false
  gl_gnulib_enabled_intprops=false
  gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467=false
  gl_gnulib_enabled_malloca=false
  gl_gnulib_enabled_803a19dff728a0b6fe8d176f0866e744=false
  gl_gnulib_enabled_mbszero=false
  gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616=false
  gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07=false
  gl_gnulib_enabled_open=false
  gl_gnulib_enabled_pathmax=false
  gl_gnulib_enabled_rawmemchr=false
  gl_gnulib_enabled_size_max=false
  gl_gnulib_enabled_stat=false
  gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c=false
  gl_gnulib_enabled_strchrnul=false
  gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72=false
  gl_gnulib_enabled_c4b6873e6f7f250d44cc0a1621906403=false
  gl_gnulib_enabled_time_r=false
  gl_gnulib_enabled_vasnprintf=false
  gl_gnulib_enabled_vsnzprintf=false
  gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44=false
  gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec=false
  gl_gnulib_enabled_xsize=false
  func_gl_gnulib_m4code_4661e0b4e500a1a00180219f0280fb04 ()
  {
    if $gl_gnulib_enabled_4661e0b4e500a1a00180219f0280fb04; then :; else
      gl_FUNC_ALLOCA
      gl_CONDITIONAL_HEADER([alloca.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_4661e0b4e500a1a00180219f0280fb04=true
    fi
  }
  func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f ()
  {
    if $gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f; then :; else
      gl_ASSERT_H
      gl_CONDITIONAL_HEADER([assert.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f=true
    fi
  }
  func_gl_gnulib_m4code_attribute ()
  {
    if $gl_gnulib_enabled_attribute; then :; else
      gl_gnulib_enabled_attribute=true
    fi
  }
  func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547 ()
  {
    if $gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547; then :; else
      gl___BUILTIN_EXPECT
      gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547=true
    fi
  }
  func_gl_gnulib_m4code_b43d3c0af3443b283ca8535297d65f1a ()
  {
    if $gl_gnulib_enabled_b43d3c0af3443b283ca8535297d65f1a; then :; else
      gl_gnulib_enabled_b43d3c0af3443b283ca8535297d65f1a=true
    fi
  }
  func_gl_gnulib_m4code_cloexec ()
  {
    if $gl_gnulib_enabled_cloexec; then :; else
      gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
      gl_gnulib_enabled_cloexec=true
      func_gl_gnulib_m4code_dup2
      func_gl_gnulib_m4code_fcntl
    fi
  }
  func_gl_gnulib_m4code_close ()
  {
    if $gl_gnulib_enabled_close; then :; else
      gl_FUNC_CLOSE
      gl_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
      gl_UNISTD_MODULE_INDICATOR([close])
      gl_MODULE_INDICATOR([close])
      gl_gnulib_enabled_close=true
      if test $REPLACE_CLOSE = 1; then
        func_gl_gnulib_m4code_43fe87a341d9b4b93c47c3ad819a5239
      fi
      if test $REPLACE_CLOSE = 1; then
        func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
      fi
    fi
  }
  func_gl_gnulib_m4code_dup2 ()
  {
    if $gl_gnulib_enabled_dup2; then :; else
      gl_FUNC_DUP2
      gl_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
      AM_COND_IF([GL_COND_OBJ_DUP2], [
        gl_PREREQ_DUP2
      ])
      gl_UNISTD_MODULE_INDICATOR([dup2])
      gl_gnulib_enabled_dup2=true
      if test $REPLACE_DUP2 = 1; then
        func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
      fi
      if test $REPLACE_DUP2 = 1; then
        func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
      fi
    fi
  }
  func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0 ()
  {
    if $gl_gnulib_enabled_d873cc295cb8f2b86655a43b19b8a7e0; then :; else
      gl_HEADER_ERRNO_H
      gl_CONDITIONAL_HEADER([errno.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_d873cc295cb8f2b86655a43b19b8a7e0=true
    fi
  }
  func_gl_gnulib_m4code_fcntl ()
  {
    if $gl_gnulib_enabled_fcntl; then :; else
      gl_FUNC_FCNTL
      gl_CONDITIONAL([GL_COND_OBJ_FCNTL],
                     [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
      gl_FCNTL_MODULE_INDICATOR([fcntl])
      gl_gnulib_enabled_fcntl=true
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_close
      fi
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_dup2
      fi
      func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_getdtablesize
      fi
      if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
        func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
      fi
    fi
  }
  func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8 ()
  {
    if $gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8; then :; else
      gl_FCNTL_H
      gl_FCNTL_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8=true
    fi
  }
  func_gl_gnulib_m4code_43fe87a341d9b4b93c47c3ad819a5239 ()
  {
    if $gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239; then :; else
      gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239=true
    fi
  }
  func_gl_gnulib_m4code_2c905a91a3e2d1527bacec459c4d462f ()
  {
    if $gl_gnulib_enabled_2c905a91a3e2d1527bacec459c4d462f; then :; else
      gl_FLOAT_H
      gl_CONDITIONAL_HEADER([float.h])
      AC_PROG_MKDIR_P
      gl_CONDITIONAL([GL_COND_OBJ_FLOAT],
                     [test $REPLACE_FLOAT_LDBL = 1 || test $REPLACE_FLOAT_SNAN = 1])
      gl_CONDITIONAL([GL_COND_OBJ_ITOLD], [test $REPLACE_ITOLD = 1])
      dnl Prerequisites of lib/float.c.
      AC_REQUIRE([gl_BIGENDIAN])
      gl_gnulib_enabled_2c905a91a3e2d1527bacec459c4d462f=true
    fi
  }
  func_gl_gnulib_m4code_ef07dc4b3077c11ea9cef586db4e5955 ()
  {
    if $gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955; then :; else
      gl_FUNC_FREE
      gl_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
      AM_COND_IF([GL_COND_OBJ_FREE], [
        gl_PREREQ_FREE
      ])
      gl_STDLIB_MODULE_INDICATOR([free-posix])
      gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955=true
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
    fi
  }
  func_gl_gnulib_m4code_fstat ()
  {
    if $gl_gnulib_enabled_fstat; then :; else
      gl_FUNC_FSTAT
      gl_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
      AM_COND_IF([GL_COND_OBJ_FSTAT], [
        case "$host_os" in
          mingw* | windows*)
            AC_LIBOBJ([stat-w32])
            ;;
        esac
        gl_PREREQ_FSTAT
      ])
      gl_SYS_STAT_MODULE_INDICATOR([fstat])
      gl_MODULE_INDICATOR([fstat])
      gl_gnulib_enabled_fstat=true
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
      fi
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
      fi
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_pathmax
      fi
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_stat
      fi
      if test $REPLACE_FSTAT = 1; then
        func_gl_gnulib_m4code_0137e3d3638b33e5819d132d0b23165c
      fi
      func_gl_gnulib_m4code_c4b6873e6f7f250d44cc0a1621906403
    fi
  }
  func_gl_gnulib_m4code_getdelim ()
  {
    if $gl_gnulib_enabled_getdelim; then :; else
      gl_FUNC_GETDELIM
      gl_CONDITIONAL([GL_COND_OBJ_GETDELIM],
                     [test $HAVE_GETDELIM = 0 || test $REPLACE_GETDELIM = 1])
      AM_COND_IF([GL_COND_OBJ_GETDELIM], [
        gl_PREREQ_GETDELIM
      ])
      gl_STDIO_MODULE_INDICATOR([getdelim])
      gl_gnulib_enabled_getdelim=true
      if test $HAVE_GETDELIM = 0 || test $REPLACE_GETDELIM = 1; then
        func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
      fi
    fi
  }
  func_gl_gnulib_m4code_getdtablesize ()
  {
    if $gl_gnulib_enabled_getdtablesize; then :; else
      gl_FUNC_GETDTABLESIZE
      gl_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE],
                     [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
      AM_COND_IF([GL_COND_OBJ_GETDTABLESIZE], [
        gl_PREREQ_GETDTABLESIZE
      ])
      gl_UNISTD_MODULE_INDICATOR([getdtablesize])
      gl_gnulib_enabled_getdtablesize=true
      if test $HAVE_GETDTABLESIZE = 0; then
        func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
      fi
    fi
  }
  func_gl_gnulib_m4code_getprogname ()
  {
    if $gl_gnulib_enabled_getprogname; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_FUNC_GETPROGNAME
      gl_CONDITIONAL([GL_COND_OBJ_GETPROGNAME],
                     [test $HAVE_GETPROGNAME = 0 || test $REPLACE_GETPROGNAME = 1])
      AM_COND_IF([GL_COND_OBJ_GETPROGNAME], [
        gl_PREREQ_GETPROGNAME
      ])
      gl_STDLIB_MODULE_INDICATOR([getprogname])
      gl_gnulib_enabled_getprogname=true
      if test $HAVE_GETPROGNAME = 0 && case "$host_os" in irix* | osf* | sco* | unixware*) true;; *) false;; esac; then
        func_gl_gnulib_m4code_open
      fi
    fi
  }
  func_gl_gnulib_m4code_intprops ()
  {
    if $gl_gnulib_enabled_intprops; then :; else
      gl_gnulib_enabled_intprops=true
    fi
  }
  func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467 ()
  {
    if $gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467; then :; else
      gl___INLINE
      gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467=true
    fi
  }
  func_gl_gnulib_m4code_malloca ()
  {
    if $gl_gnulib_enabled_malloca; then :; else
      gl_MALLOCA
      gl_gnulib_enabled_malloca=true
      func_gl_gnulib_m4code_4661e0b4e500a1a00180219f0280fb04
      func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
      func_gl_gnulib_m4code_682e609604ccaac6be382e4ee3a4eaec
    fi
  }
  func_gl_gnulib_m4code_803a19dff728a0b6fe8d176f0866e744 ()
  {
    if $gl_gnulib_enabled_803a19dff728a0b6fe8d176f0866e744; then :; else
      gl_MATH_H
      gl_MATH_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_803a19dff728a0b6fe8d176f0866e744=true
      func_gl_gnulib_m4code_2c905a91a3e2d1527bacec459c4d462f
    fi
  }
  func_gl_gnulib_m4code_mbszero ()
  {
    if $gl_gnulib_enabled_mbszero; then :; else
      AC_REQUIRE([AC_TYPE_MBSTATE_T])
      gl_MBSTATE_T_BROKEN
      gl_MUSL_LIBC
      gl_WCHAR_MODULE_INDICATOR([mbszero])
      gl_gnulib_enabled_mbszero=true
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
    fi
  }
  func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616 ()
  {
    if $gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616; then :; else
      AC_REQUIRE([gl_MSVC_INVAL])
      gl_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL],
                     [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
      gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616=true
    fi
  }
  func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07 ()
  {
    if $gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07; then :; else
      AC_REQUIRE([gl_MSVC_NOTHROW])
      gl_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW],
                     [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
      gl_MODULE_INDICATOR([msvc-nothrow])
      gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07=true
      func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
    fi
  }
  func_gl_gnulib_m4code_open ()
  {
    if $gl_gnulib_enabled_open; then :; else
      gl_FUNC_OPEN
      gl_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
      AM_COND_IF([GL_COND_OBJ_OPEN], [
        gl_PREREQ_OPEN
      ])
      gl_FCNTL_MODULE_INDICATOR([open])
      gl_gnulib_enabled_open=true
      if test $REPLACE_OPEN = 1; then
        func_gl_gnulib_m4code_cloexec
      fi
      func_gl_gnulib_m4code_deb6c5f14b16306a85c59bccf4d416d8
      if test $REPLACE_OPEN = 1; then
        func_gl_gnulib_m4code_fstat
      fi
      if test $REPLACE_OPEN = 1; then
        func_gl_gnulib_m4code_stat
      fi
    fi
  }
  func_gl_gnulib_m4code_pathmax ()
  {
    if $gl_gnulib_enabled_pathmax; then :; else
      gl_PATHMAX
      gl_gnulib_enabled_pathmax=true
    fi
  }
  func_gl_gnulib_m4code_rawmemchr ()
  {
    if $gl_gnulib_enabled_rawmemchr; then :; else
      gl_FUNC_RAWMEMCHR
      gl_CONDITIONAL([GL_COND_OBJ_RAWMEMCHR], [test $HAVE_RAWMEMCHR = 0])
      AM_COND_IF([GL_COND_OBJ_RAWMEMCHR], [
        gl_PREREQ_RAWMEMCHR
      ])
      gl_STRING_MODULE_INDICATOR([rawmemchr])
      gl_gnulib_enabled_rawmemchr=true
      func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
    fi
  }
  func_gl_gnulib_m4code_size_max ()
  {
    if $gl_gnulib_enabled_size_max; then :; else
      gl_SIZE_MAX
      gl_gnulib_enabled_size_max=true
    fi
  }
  func_gl_gnulib_m4code_stat ()
  {
    if $gl_gnulib_enabled_stat; then :; else
      gl_FUNC_STAT
      gl_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
      AM_COND_IF([GL_COND_OBJ_STAT], [
        case "$host_os" in
          mingw* | windows*)
            AC_LIBOBJ([stat-w32])
            ;;
        esac
        gl_PREREQ_STAT
      ])
      gl_SYS_STAT_MODULE_INDICATOR([stat])
      gl_MODULE_INDICATOR([stat])
      gl_gnulib_enabled_stat=true
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
      fi
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_malloca
      fi
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_pathmax
      fi
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_0137e3d3638b33e5819d132d0b23165c
      fi
      func_gl_gnulib_m4code_c4b6873e6f7f250d44cc0a1621906403
    fi
  }
  func_gl_gnulib_m4code_0137e3d3638b33e5819d132d0b23165c ()
  {
    if $gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c; then :; else
      gl_STAT_TIME
      gl_STAT_BIRTHTIME
      gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c=true
      func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
    fi
  }
  func_gl_gnulib_m4code_strchrnul ()
  {
    if $gl_gnulib_enabled_strchrnul; then :; else
      gl_FUNC_STRCHRNUL
      gl_CONDITIONAL([GL_COND_OBJ_STRCHRNUL],
                     [test $HAVE_STRCHRNUL = 0 || test $REPLACE_STRCHRNUL = 1])
      AM_COND_IF([GL_COND_OBJ_STRCHRNUL], [
        gl_PREREQ_STRCHRNUL
      ])
      gl_STRING_MODULE_INDICATOR([strchrnul])
      gl_gnulib_enabled_strchrnul=true
      if test $HAVE_STRCHRNUL = 0 || test $REPLACE_STRCHRNUL = 1; then
        func_gl_gnulib_m4code_rawmemchr
      fi
    fi
  }
  func_gl_gnulib_m4code_dbb57f49352be8fb86869629a254fb72 ()
  {
    if $gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72; then :; else
      AC_REQUIRE([gl_HEADER_ERRNO_H])
      AC_REQUIRE([gl_FUNC_STRERROR_0])
      gl_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE],
                     [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
      AM_COND_IF([GL_COND_OBJ_STRERROR_OVERRIDE], [
        gl_PREREQ_SYS_H_WINSOCK2
      ])
      gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72=true
      func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
    fi
  }
  func_gl_gnulib_m4code_c4b6873e6f7f250d44cc0a1621906403 ()
  {
    if $gl_gnulib_enabled_c4b6873e6f7f250d44cc0a1621906403; then :; else
      gl_SYS_STAT_H
      gl_SYS_STAT_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_c4b6873e6f7f250d44cc0a1621906403=true
    fi
  }
  func_gl_gnulib_m4code_time_r ()
  {
    if $gl_gnulib_enabled_time_r; then :; else
      gl_TIME_R
      gl_CONDITIONAL([GL_COND_OBJ_TIME_R],
                     [test $HAVE_LOCALTIME_R = 0 || test $REPLACE_LOCALTIME_R = 1])
      AM_COND_IF([GL_COND_OBJ_TIME_R], [
        gl_PREREQ_TIME_R
      ])
      gl_TIME_MODULE_INDICATOR([time_r])
      gl_gnulib_enabled_time_r=true
    fi
  }
  func_gl_gnulib_m4code_vasnprintf ()
  {
    if $gl_gnulib_enabled_vasnprintf; then :; else
      AC_REQUIRE([AC_C_RESTRICT])
      gl_FUNC_VASNPRINTF
      gl_gnulib_enabled_vasnprintf=true
      func_gl_gnulib_m4code_4661e0b4e500a1a00180219f0280fb04
      func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
      func_gl_gnulib_m4code_attribute
      func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
      func_gl_gnulib_m4code_2c905a91a3e2d1527bacec459c4d462f
      func_gl_gnulib_m4code_ef07dc4b3077c11ea9cef586db4e5955
      func_gl_gnulib_m4code_mbszero
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
      func_gl_gnulib_m4code_xsize
    fi
  }
  func_gl_gnulib_m4code_vsnzprintf ()
  {
    if $gl_gnulib_enabled_vsnzprintf; then :; else
      gl_STDIO_MODULE_INDICATOR([vsnzprintf])
      gl_gnulib_enabled_vsnzprintf=true
      func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
      func_gl_gnulib_m4code_vasnprintf
    fi
  }
  func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44 ()
  {
    if $gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44; then :; else
      gl_WCHAR_H
      gl_WCHAR_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44=true
    fi
  }
  func_gl_gnulib_m4code_682e609604ccaac6be382e4ee3a4eaec ()
  {
    if $gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec; then :; else
      gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec=true
    fi
  }
  func_gl_gnulib_m4code_xsize ()
  {
    if $gl_gnulib_enabled_xsize; then :; else
      gl_XSIZE
      gl_gnulib_enabled_xsize=true
      func_gl_gnulib_m4code_attribute
      func_gl_gnulib_m4code_size_max
    fi
  }
  if test $COMPILE_ERROR_C = 1; then
    func_gl_gnulib_m4code_getprogname
  fi
  if test $COMPILE_ERROR_C = 1; then
    func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
  fi
  if test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1; then
    func_gl_gnulib_m4code_f691f076f650964c9f5598c3ee487616
  fi
  if test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1; then
    func_gl_gnulib_m4code_676220fa4366efa9bdbfccf11a857c07
  fi
  if test $REPLACE_GETLINE = 1; then
    func_gl_gnulib_m4code_getdelim
  fi
  if test $HAVE_GETSUBOPT = 0 || test $REPLACE_GETSUBOPT = 1; then
    func_gl_gnulib_m4code_strchrnul
  fi
  if test $REPLACE_MKTIME = 1; then
    func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
  fi
  if test $REPLACE_MKTIME = 1; then
    func_gl_gnulib_m4code_intprops
  fi
  if test $REPLACE_MKTIME = 1; then
    func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467
  fi
  if test $REPLACE_MKTIME = 1; then
    func_gl_gnulib_m4code_time_r
  fi
  if test $ac_cv_func_snprintf = no || test $REPLACE_SNPRINTF = 1; then
    func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
  fi
  if test $ac_cv_func_snprintf = no || test $REPLACE_SNPRINTF = 1; then
    func_gl_gnulib_m4code_vsnzprintf
  fi
  if test $REPLACE_STRERROR = 1; then
    func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
  fi
  if test $REPLACE_STRERROR = 1; then
    func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
  fi
  if test $REPLACE_STRERROR = 1; then
    func_gl_gnulib_m4code_intprops
  fi
  if test $REPLACE_STRERROR = 1; then
    func_gl_gnulib_m4code_dbb57f49352be8fb86869629a254fb72
  fi
  if test $REPLACE_STRSTR = 1; then
    func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547
  fi
  if test $HAVE_STRTOD = 0 || test $REPLACE_STRTOD = 1; then
    func_gl_gnulib_m4code_b43d3c0af3443b283ca8535297d65f1a
  fi
  if test $HAVE_STRTOD = 0 || test $REPLACE_STRTOD = 1; then
    func_gl_gnulib_m4code_803a19dff728a0b6fe8d176f0866e744
  fi
  if test $HAVE_DECL_STRTOIMAX = 0 || test $REPLACE_STRTOIMAX = 1; then
    func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
  fi
  if test $HAVE_DECL_STRTOUMAX = 0 || test $REPLACE_STRTOUMAX = 1; then
    func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
  fi
  if test $ac_cv_func_vsnprintf = no || test $REPLACE_VSNPRINTF = 1; then
    func_gl_gnulib_m4code_d873cc295cb8f2b86655a43b19b8a7e0
  fi
  if test $ac_cv_func_vsnprintf = no || test $REPLACE_VSNPRINTF = 1; then
    func_gl_gnulib_m4code_vsnzprintf
  fi
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_4661e0b4e500a1a00180219f0280fb04], [$gl_gnulib_enabled_4661e0b4e500a1a00180219f0280fb04])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_d07eca4c7a24aaac657c64e6568d4c2f], [$gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_attribute], [$gl_gnulib_enabled_attribute])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_37f71b604aa9c54446783d80f42fe547], [$gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_b43d3c0af3443b283ca8535297d65f1a], [$gl_gnulib_enabled_b43d3c0af3443b283ca8535297d65f1a])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_cloexec], [$gl_gnulib_enabled_cloexec])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_close], [$gl_gnulib_enabled_close])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_dup2], [$gl_gnulib_enabled_dup2])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_d873cc295cb8f2b86655a43b19b8a7e0], [$gl_gnulib_enabled_d873cc295cb8f2b86655a43b19b8a7e0])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_fcntl], [$gl_gnulib_enabled_fcntl])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_deb6c5f14b16306a85c59bccf4d416d8], [$gl_gnulib_enabled_deb6c5f14b16306a85c59bccf4d416d8])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_43fe87a341d9b4b93c47c3ad819a5239], [$gl_gnulib_enabled_43fe87a341d9b4b93c47c3ad819a5239])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_2c905a91a3e2d1527bacec459c4d462f], [$gl_gnulib_enabled_2c905a91a3e2d1527bacec459c4d462f])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_ef07dc4b3077c11ea9cef586db4e5955], [$gl_gnulib_enabled_ef07dc4b3077c11ea9cef586db4e5955])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_fstat], [$gl_gnulib_enabled_fstat])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_getdelim], [$gl_gnulib_enabled_getdelim])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_getdtablesize], [$gl_gnulib_enabled_getdtablesize])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_getprogname], [$gl_gnulib_enabled_getprogname])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_intprops], [$gl_gnulib_enabled_intprops])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_21ee726a3540c09237a8e70c0baf7467], [$gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_malloca], [$gl_gnulib_enabled_malloca])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_803a19dff728a0b6fe8d176f0866e744], [$gl_gnulib_enabled_803a19dff728a0b6fe8d176f0866e744])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mbszero], [$gl_gnulib_enabled_mbszero])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_f691f076f650964c9f5598c3ee487616], [$gl_gnulib_enabled_f691f076f650964c9f5598c3ee487616])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_676220fa4366efa9bdbfccf11a857c07], [$gl_gnulib_enabled_676220fa4366efa9bdbfccf11a857c07])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_open], [$gl_gnulib_enabled_open])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_pathmax], [$gl_gnulib_enabled_pathmax])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_rawmemchr], [$gl_gnulib_enabled_rawmemchr])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_size_max], [$gl_gnulib_enabled_size_max])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_stat], [$gl_gnulib_enabled_stat])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_0137e3d3638b33e5819d132d0b23165c], [$gl_gnulib_enabled_0137e3d3638b33e5819d132d0b23165c])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_strchrnul], [$gl_gnulib_enabled_strchrnul])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_dbb57f49352be8fb86869629a254fb72], [$gl_gnulib_enabled_dbb57f49352be8fb86869629a254fb72])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_c4b6873e6f7f250d44cc0a1621906403], [$gl_gnulib_enabled_c4b6873e6f7f250d44cc0a1621906403])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_time_r], [$gl_gnulib_enabled_time_r])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_vasnprintf], [$gl_gnulib_enabled_vasnprintf])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_vsnzprintf], [$gl_gnulib_enabled_vsnzprintf])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_4ecd1c701e4ad8dbf53a3ed9185f3f44], [$gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_682e609604ccaac6be382e4ee3a4eaec], [$gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_xsize], [$gl_gnulib_enabled_xsize])
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    gl_libobjdeps=
    gl_libgnu_libobjs=
    gl_libgnu_ltlibobjs=
    gl_libgnu_libobjdeps=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,[^/]*$,,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs $i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gl_libgnu_libobjs="$gl_libgnu_libobjs $i_dir""libgnu_a-$i_base.$ac_objext"
        gl_libgnu_ltlibobjs="$gl_libgnu_ltlibobjs $i_dir""libgnu_la-$i_base.lo"
        gl_libobjdeps="$gl_libobjdeps $i_dir\$(DEPDIR)/$i_base.Po"
        gl_libgnu_libobjdeps="$gl_libgnu_libobjdeps $i_dir\$(DEPDIR)/libgnu_a-$i_base.Po"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
    AC_SUBST([gl_LIBOBJDEPS], [$gl_libobjdeps])
    AC_SUBST([gl_libgnu_LIBOBJS], [$gl_libgnu_libobjs])
    AC_SUBST([gl_libgnu_LTLIBOBJS], [$gl_libgnu_ltlibobjs])
    AC_SUBST([gl_libgnu_LIBOBJDEPS], [$gl_libgnu_libobjdeps])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gltests])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='libgnu/tests'
  gl_source_base_prefix=
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    gltests_libobjdeps=
    gltests_libgnu_libobjs=
    gltests_libgnu_ltlibobjs=
    gltests_libgnu_libobjdeps=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,[^/]*$,,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gltests_libgnu_libobjs="$gltests_libgnu_libobjs $i_dir""libgnu_a-$i_base.$ac_objext"
        gltests_libgnu_ltlibobjs="$gltests_libgnu_ltlibobjs $i_dir""libgnu_la-$i_base.lo"
        gltests_libobjdeps="$gltests_libobjdeps $i_dir\$(DEPDIR)/$i_base.Po"
        gltests_libgnu_libobjdeps="$gltests_libgnu_libobjdeps $i_dir\$(DEPDIR)/libgnu_a-$i_base.Po"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
    AC_SUBST([gltests_LIBOBJDEPS], [$gltests_libobjdeps])
    AC_SUBST([gltests_libgnu_LIBOBJS], [$gltests_libgnu_libobjs])
    AC_SUBST([gltests_libgnu_LTLIBOBJS], [$gltests_libgnu_ltlibobjs])
    AC_SUBST([gltests_libgnu_LIBOBJDEPS], [$gltests_libgnu_libobjdeps])
  ])
  AC_REQUIRE([gl_CC_GNULIB_WARNINGS])
  LIBGNU_LIBDEPS="$gl_libdeps"
  AC_SUBST([LIBGNU_LIBDEPS])
  LIBGNU_LTLIBDEPS="$gl_ltlibdeps"
  AC_SUBST([LIBGNU_LTLIBDEPS])
])

# Like AC_LIBOBJ, except that the module name goes
# into gl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into gl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [libgnu])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# Like AC_LIBOBJ, except that the module name goes
# into gltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into gltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [libgnu/tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# This macro records the list of files which have been installed by
# gnulib-tool and may be removed by future gnulib-tool invocations.
AC_DEFUN([gl_FILE_LIST], [
  build-aux/config.rpath
  lib/_Noreturn.h
  lib/alloca.in.h
  lib/arg-nonnull.h
  lib/asnprintf.c
  lib/assert.in.h
  lib/attribute.h
  lib/basename-lgpl.c
  lib/basename-lgpl.h
  lib/basename.c
  lib/c++defs.h
  lib/c-ctype.c
  lib/c-ctype.h
  lib/calloc.c
  lib/cdefs.h
  lib/cloexec.c
  lib/cloexec.h
  lib/close.c
  lib/dirname-lgpl.c
  lib/dirname.c
  lib/dirname.h
  lib/dummy.c
  lib/dup2.c
  lib/errno.in.h
  lib/error.c
  lib/error.in.h
  lib/exitfail.c
  lib/exitfail.h
  lib/fcntl.c
  lib/fcntl.in.h
  lib/fd-hook.c
  lib/fd-hook.h
  lib/filename.h
  lib/float+.h
  lib/float.c
  lib/float.in.h
  lib/free.c
  lib/fstat.c
  lib/ftruncate.c
  lib/getdelim.c
  lib/getdtablesize.c
  lib/getline.c
  lib/getprogname.c
  lib/getprogname.h
  lib/getsubopt.c
  lib/gettext.h
  lib/gettimeofday.c
  lib/ialloc.c
  lib/ialloc.h
  lib/idx.h
  lib/intprops-internal.h
  lib/intprops.h
  lib/inttypes.in.h
  lib/itold.c
  lib/libc-config.h
  lib/limits.in.h
  lib/locale.in.h
  lib/malloc.c
  lib/malloca.c
  lib/malloca.h
  lib/math.c
  lib/math.in.h
  lib/mbszero.c
  lib/memchr.c
  lib/memchr.valgrind
  lib/minmax.h
  lib/mktime-internal.h
  lib/mktime.c
  lib/msvc-inval.c
  lib/msvc-inval.h
  lib/msvc-nothrow.c
  lib/msvc-nothrow.h
  lib/open.c
  lib/pathmax.h
  lib/printf-args.c
  lib/printf-args.h
  lib/printf-parse.c
  lib/printf-parse.h
  lib/progname.c
  lib/progname.h
  lib/rawmemchr.c
  lib/rawmemchr.valgrind
  lib/realloc.c
  lib/reallocarray.c
  lib/size_max.h
  lib/snprintf.c
  lib/stat-time.c
  lib/stat-time.h
  lib/stat-w32.c
  lib/stat-w32.h
  lib/stat.c
  lib/stdckdint.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdio-read.c
  lib/stdio-write.c
  lib/stdio.in.h
  lib/stdlib.c
  lib/stdlib.in.h
  lib/str-two-way.h
  lib/strchrnul.c
  lib/strchrnul.valgrind
  lib/strerror-override.c
  lib/strerror-override.h
  lib/strerror.c
  lib/string.in.h
  lib/stripslash.c
  lib/strstr.c
  lib/strtod.c
  lib/strtoimax.c
  lib/strtol.c
  lib/strtoll.c
  lib/strtoul.c
  lib/strtoull.c
  lib/strtoumax.c
  lib/sys_stat.in.h
  lib/sys_time.in.h
  lib/sys_types.in.h
  lib/time.in.h
  lib/time_r.c
  lib/unistd.c
  lib/unistd.in.h
  lib/vasnprintf.c
  lib/vasnprintf.h
  lib/verify.h
  lib/vsnprintf.c
  lib/vsnzprintf.c
  lib/warn-on-use.h
  lib/wchar.in.h
  lib/xalloc-die.c
  lib/xalloc-oversized.h
  lib/xalloc.h
  lib/xmalloc.c
  lib/xsize.c
  lib/xsize.h
  m4/00gnulib.m4
  m4/__inline.m4
  m4/absolute-header.m4
  m4/alloca.m4
  m4/assert.m4
  m4/assert_h.m4
  m4/build-to-host.m4
  m4/builtin-expect.m4
  m4/c-bool.m4
  m4/calloc.m4
  m4/close.m4
  m4/codeset.m4
  m4/double-slash-root.m4
  m4/dup2.m4
  m4/errno_h.m4
  m4/error.m4
  m4/error_h.m4
  m4/exponentd.m4
  m4/extensions-aix.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/fcntl-o.m4
  m4/fcntl.m4
  m4/fcntl_h.m4
  m4/float_h.m4
  m4/free.m4
  m4/fstat.m4
  m4/ftruncate.m4
  m4/getdelim.m4
  m4/getdtablesize.m4
  m4/getline.m4
  m4/getprogname.m4
  m4/getsubopt.m4
  m4/gettext.m4
  m4/gettimeofday.m4
  m4/gnulib-common.m4
  m4/gnulib-i18n.m4
  m4/host-cpu-c-abi.m4
  m4/iconv.m4
  m4/include_next.m4
  m4/intl-thread-locale.m4
  m4/intlmacosx.m4
  m4/intmax_t.m4
  m4/inttypes.m4
  m4/inttypes_h.m4
  m4/largefile.m4
  m4/ldexp.m4
  m4/lib-ld.m4
  m4/lib-link.m4
  m4/lib-prefix.m4
  m4/limits-h.m4
  m4/locale-en.m4
  m4/locale-ja.m4
  m4/locale-zh.m4
  m4/locale_h.m4
  m4/malloc.m4
  m4/malloca.m4
  m4/math_h.m4
  m4/mbrtowc.m4
  m4/mbstate_t.m4
  m4/memchr.m4
  m4/minmax.m4
  m4/mktime.m4
  m4/mmap-anon.m4
  m4/mode_t.m4
  m4/msvc-inval.m4
  m4/msvc-nothrow.m4
  m4/multiarch.m4
  m4/musl.m4
  m4/nls.m4
  m4/off64_t.m4
  m4/off_t.m4
  m4/open-cloexec.m4
  m4/open-slash.m4
  m4/open.m4
  m4/pathmax.m4
  m4/pid_t.m4
  m4/po.m4
  m4/printf.m4
  m4/progtest.m4
  m4/rawmemchr.m4
  m4/realloc.m4
  m4/reallocarray.m4
  m4/size_max.m4
  m4/snprintf.m4
  m4/ssize_t.m4
  m4/stat-time.m4
  m4/stat.m4
  m4/std-gnu11.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdint_h.m4
  m4/stdio_h.m4
  m4/stdlib_h.m4
  m4/strchrnul.m4
  m4/strerror.m4
  m4/string_h.m4
  m4/strstr.m4
  m4/strtod.m4
  m4/strtoimax.m4
  m4/strtol.m4
  m4/strtoll.m4
  m4/strtoul.m4
  m4/strtoull.m4
  m4/strtoumax.m4
  m4/sys_socket_h.m4
  m4/sys_stat_h.m4
  m4/sys_time_h.m4
  m4/sys_types_h.m4
  m4/time_h.m4
  m4/time_r.m4
  m4/unistd_h.m4
  m4/vararrays.m4
  m4/vasnprintf.m4
  m4/vsnprintf.m4
  m4/warn-on-use.m4
  m4/wchar_h.m4
  m4/wint_t.m4
  m4/xalloc.m4
  m4/xsize.m4
  m4/zzgnulib.m4
])
