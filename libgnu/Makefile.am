## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Automake, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Invoked as: gnulib-tool --import --dir=.. --lib=libgnu --source-base=libgnu --m4-base=libgnu/m4 --aux-dir=config --no-changelog c-bs-a assert dummy exit atexit strtod strtol strtoul memchr memcmp memcpy memmove memset strcspn strpbrk strstr strerror mktime calloc free malloc realloc restrict stdbool stdint ullong_max strtoll strtoull strtoimax strtoumax snprintf vsnprintf getsubopt dirname getopt xalloc xalloc-die getline error exitfail gettext progname ftruncate getsubopt
# Reproduce by: gnulib-tool --import --dir=.. --lib=libgnu --source-base=libgnu --m4-base=libgnu/m4 --aux-dir=config   alloca-opt assert atexit c-bs-a calloc dirname dummy error exit exitfail extensions free ftruncate getline getopt getsubopt gettext malloc memchr memcmp memcpy memmove memset minmax mktime progname realloc restrict snprintf stdbool stdint strchrnul strcspn strerror strpbrk strstr strtod strtoimax strtol strtoll strtoul strtoull strtoumax time_r ullong_max vasnprintf vsnprintf xalloc xalloc-die xsize

AUTOMAKE_OPTIONS = 1.5 gnits no-dependencies

noinst_LIBRARIES = libgnu.a

libgnu_a_SOURCES =
libgnu_a_LIBADD = @LIBOBJS@
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create an <alloca.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(ALLOCA_H)
alloca.h: alloca_.h
	cp $(srcdir)/alloca_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

## end   gnulib module alloca-opt

## begin gnulib module dirname

libgnu_a_SOURCES += basename.c stripslash.c

## end   gnulib module dirname

## begin gnulib module dummy

libgnu_a_SOURCES += dummy.c

## end   gnulib module dummy

## begin gnulib module exit

libgnu_a_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module getline

EXTRA_DIST += getndelim2.h getndelim2.c

## end   gnulib module getline

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create an <getopt.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(GETOPT_H)
getopt.h: getopt_.h
	cp $(srcdir)/getopt_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

## end   gnulib module getopt

## begin gnulib module getsubopt

libgnu_a_SOURCES += getsubopt.h

## end   gnulib module getsubopt

## begin gnulib module gettext

libgnu_a_SOURCES += gettext.h

## end   gnulib module gettext

## begin gnulib module minmax

libgnu_a_SOURCES += minmax.h

## end   gnulib module minmax

## begin gnulib module progname

libgnu_a_SOURCES += progname.h progname.c

## end   gnulib module progname

## begin gnulib module snprintf

libgnu_a_SOURCES += snprintf.h

## end   gnulib module snprintf

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)
EXTRA_DIST += stdbool_.h

# We need the following in order to create an <stdbool.h> when the system
# doesn't have one that works.
all-local $(libgnu_a_OBJECTS): $(STDBOOL_H)
stdbool.h: stdbool_.h
	sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)
EXTRA_DIST += stdint_.h

# We need the following in order to create an <stdint.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(STDINT_H)
stdint.h: stdint_.h
	sed -e 's/@''HAVE_LONG_64BIT''@/$(HAVE_LONG_64BIT)/g;s/@''HAVE_LONG_LONG_64BIT@/$(HAVE_LONG_LONG_64BIT)/g' < $(srcdir)/stdint_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

## end   gnulib module stdint

## begin gnulib module strchrnul

libgnu_a_SOURCES += strchrnul.h

## end   gnulib module strchrnul

## begin gnulib module strpbrk

libgnu_a_SOURCES += strpbrk.h

## end   gnulib module strpbrk

## begin gnulib module strstr

libgnu_a_SOURCES += strstr.h

## end   gnulib module strstr

## begin gnulib module strtod

LIBS += $(POW_LIB)

## end   gnulib module strtod

## begin gnulib module time_r

libgnu_a_SOURCES += time_r.h

## end   gnulib module time_r

## begin gnulib module vasnprintf

libgnu_a_SOURCES += printf-args.h printf-parse.h vasnprintf.h

## end   gnulib module vasnprintf

## begin gnulib module vsnprintf

libgnu_a_SOURCES += vsnprintf.h

## end   gnulib module vsnprintf

## begin gnulib module xalloc-die

libgnu_a_SOURCES += xalloc-die.c

## end   gnulib module xalloc-die

## begin gnulib module xsize

libgnu_a_SOURCES += xsize.h

## end   gnulib module xsize


# Makefile.am ends here
